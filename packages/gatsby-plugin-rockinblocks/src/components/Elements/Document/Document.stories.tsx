import React from "react"
import { Story, Meta } from "@storybook/react"
import { Document, IDocumentProps } from "./Document"

export default {
  title: "Elements/Document",
  component: Document,
} as Meta

const Template: Story<IDocumentProps> = args => <Document {...args} />

export const Default = Template.bind({})
Default.args = {
  frontmatter: {
    date_created: "2020-04-12",
    date_updated: "2020-04-12",
    description:
      "Using Markdown with Gatsby and GraphQL makes the creation of new content a breeze.",
    keywords: "markdown, gatsby, graphql",
    path: "/blog/gatsbyjs-setup-with-sass-and-markdown-support",
    title: "GatsbyJS Setup with Sass and Markdown Support",
    type: "document",
  },
  html: `<h2>Show off a fancy list of our top Spotify artists without much hassle</h2>\n<p>I knew that Spotify had a really great API, but I had never had a chance to really tap into it to see what I could do. What could be a better project than creating a list of my recent jams? You can check out a working example using my Spotify account <a href="/spotify">here</a>.</p>\n<hr>\n<h3>Package Installation</h3>\n<p>Fortunately, there is already a <a href="https://www.gatsbyjs.org/packages/gatsby-source-spotify/">Gatsby package</a> created to make this a breeze. We are also going to pull in <code class="language-text">gatsby-image</code> to display the artists' photographs.</p>\n<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text"># With Yarn\nyarn add gatsby-source-spotify gatsby-image\n\n# With NPM\nnpm i gatsby-source-spotify gatsby-image --save</code></pre></div>\n<hr>\n<h3>Create your Spotify app</h3>\n<p>You can create your Spotify app from their <a href="https://developer.spotify.com/dashboard">developer dashboard</a>. We need three things: a client ID, a client secret, and a refresh token. Make sure you don't lose your refresh token, as the way Spotify currently provides that is a little strange.</p>\n<hr>\n<h3>Configuration</h3>\n<p>Now that you have your credentials, add them to an object within the <code class="language-text">plugins</code> array in <code class="language-text">gatsby-config.js</code>. Make sure you never share your client secret, as bad actors could potentially access the Spotify API as you.</p>\n<p>There are three different times ranges that can be fetched:</p>\n<ol>\n<li><code class="language-text">short_term</code> will provide your data from the last four weeks</li>\n<li><code class="language-text">medium_term</code> will provide data from the last six months</li>\n<li><code class="language-text">long_term</code> will provide data since your account was created</li>\n</ol>\n<p>You can include all three time ranges here in your <code class="language-text">gatsby-config.js</code>, though we are only going to be using <code class="language-text">short_term</code> in our example.</p>\n<h4>Update your configuration file</h4>\n<h5>gatsby-config.js</h5>\n<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">plugins: [\n    {\n    resolve: \`gatsby-source-spotify\`,\n    options: {\n        clientId: \`&lt;CLIENT_ID&gt;\`,\n        clientSecret: \`&lt;CLIENT_SECRET&gt;\`, // Don&#39;t add to public repository\n        refreshToken: \`&lt;REFRESH_TOKEN&gt;\`,\n\n        fetchPlaylists: true, // optional. Set to false to disable fetching of your playlists\n        fetchRecent: true, // optional. Set to false to disable fetching of your recently played tracks\n        timeRanges: [&#39;short_term&#39;, &#39;medium_term&#39;, &#39;long_term&#39;], // optional. Set time ranges to be fetched\n      },\n    }\n]</code></pre></div>\n<hr>\n<h3>Display the artist list</h3>\n<h4>Create a page to display the list</h4>\n<p>This would be similar to my <a href="/spotify">Spotify</a> page. I just added a <code class="language-text">spotify.js</code> file to my <code class="language-text">src/pages</code> directory in my Gatsby app. You can see I am using a <code class="language-text">SpotifyTopArtists</code> component that we will create next.</p>\n<h5>spotify.js</h5>\n<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">import React from &quot;react&quot;\nimport Layout from &quot;../components/layout&quot;\nimport SEO from &quot;../components/seo&quot;\nimport SpotifyTopArtists from &quot;../components/spotifyTopArtists&quot;\n\nconst Spotify = () =&gt; (\n    &lt;Layout&gt;\n        &lt;SEO title=&quot;Spotify&quot; /&gt;\n        &lt;h1&gt;Spotify&lt;/h1&gt;\n        &lt;SpotifyTopArtists /&gt;\n    &lt;/Layout&gt;\n)\n\nexport default Spotify</code></pre></div>\n<h4>Create the list component</h4>\n<p>I created a <code class="language-text">spotifyTopArtists.js</code> component within the <code class="language-text">components</code> directory. The list makes its own GraphQL query to grab the data from Spotify. You can see I am passing in <code class="language-text">short_term</code> to grab only the past four weeks, but you can add <code class="language-text">long_term</code> or <code class="language-text">medium_term</code> here, as well.</p>\n<h5>spotifyTopArtists.js</h5>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useStaticQuery<span class="token punctuation">,</span> graphql <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'gatsby'</span>\n<span class="token keyword">import</span> Img <span class="token keyword">from</span> <span class="token string">'gatsby-image'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">SpotifyTopArtists</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token function">useStaticQuery</span><span class="token punctuation">(</span>graphql<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\n    query SpotifyTopArtistsQuery {\n      allSpotifyTopArtist(\n        filter: { time_range: { eq: "short_term" } }\n        sort: { frontmatter: order }\n      ) {\n        edges {\n          node {\n            name\n            genres\n            image {\n              localFile {\n                childImageSharp {\n                  fluid(maxWidth: 400) {\n                    ...GatsbyImageSharpFluid_withWebp\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span><span class="token operator">></span>\n      <span class="token punctuation">{</span>data<span class="token punctuation">.</span>allSpotifyTopArtist<span class="token punctuation">.</span>edges <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>\n        <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">"spotify__top-artists"</span><span class="token operator">></span>\n          <span class="token operator">&lt;</span>h2<span class="token operator">></span>Top <span class="token number">20</span> Artists<span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>\n          <span class="token operator">&lt;</span>p<span class="token operator">></span>These are my top <span class="token number">20</span> artists <span class="token keyword">from</span> the past four weeks<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>\n          <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">"spotify__list"</span><span class="token operator">></span>\n            <span class="token punctuation">{</span>data<span class="token punctuation">.</span>allSpotifyTopArtist<span class="token punctuation">.</span>edges<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">artist<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n              <span class="token operator">&lt;</span>div key<span class="token operator">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span> className<span class="token operator">=</span><span class="token string">"spotify__list-item d-flex"</span><span class="token operator">></span>\n                <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">"spotify__album-cover"</span><span class="token operator">></span>\n                  <span class="token operator">&lt;</span>Img\n                    fluid<span class="token operator">=</span><span class="token punctuation">{</span>artist<span class="token punctuation">.</span>node<span class="token punctuation">.</span>image<span class="token punctuation">.</span>localFile<span class="token punctuation">.</span>childImageSharp<span class="token punctuation">.</span>fluid<span class="token punctuation">}</span>\n                  <span class="token operator">/</span><span class="token operator">></span>\n                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n                <span class="token operator">&lt;</span>h3<span class="token operator">></span>\n                  <span class="token operator">&lt;</span>span className<span class="token operator">=</span><span class="token string">"spotify__list-item-number"</span><span class="token operator">></span><span class="token punctuation">{</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>\n                  <span class="token punctuation">{</span>artist<span class="token punctuation">.</span>node<span class="token punctuation">.</span>name<span class="token punctuation">}</span>\n                <span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>\n              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n            <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n          <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n      <span class="token punctuation">)</span><span class="token punctuation">}</span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> SpotifyTopArtists</code></pre></div>\n<hr>\n<h3>Styles</h3>\n<h4>Implementing Sass</h4>\n<p>If you need help hooking up Sass into your GatsbyJS project I wrote another article here:</p>\n<p><a href="/blog/gatsbyjs-setup-with-sass-and-markdown-support">GatsbyJS Setup with Sass and Markdown Support</a></p>\n<h4>Create your stylesheet</h4>\n<p>I added a <code class="language-text">spotify.scss</code> to my app with some basic styles that should help get you started with your artist list.</p>\n<h5>spotify.scss</h5>\n<div class="gatsby-highlight" data-language="scss"><pre class="language-scss"><code class="language-scss"><span class="token selector">.spotify__list </span><span class="token punctuation">{</span>\n  <span class="token property">padding</span><span class="token punctuation">:</span> 1rem<span class="token punctuation">;</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> #f7f7f7<span class="token punctuation">;</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> 40rem<span class="token punctuation">;</span>\n  <span class="token property">overflow-y</span><span class="token punctuation">:</span> scroll<span class="token punctuation">;</span>\n  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 2rem<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.spotify__list-item </span><span class="token punctuation">{</span>\n  <span class="token property">padding</span><span class="token punctuation">:</span> 1rem<span class="token punctuation">;</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> #ffffff<span class="token punctuation">;</span>\n  <span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px solid #eeeeee<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.spotify__list-item-number </span><span class="token punctuation">{</span>\n  <span class="token property">font-size</span><span class="token punctuation">:</span> 0.75rem<span class="token punctuation">;</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #f7f7f7<span class="token punctuation">;</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> #000000<span class="token punctuation">;</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> 1.5rem<span class="token punctuation">;</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> 1.5rem<span class="token punctuation">;</span>\n  <span class="token property">border-radius</span><span class="token punctuation">:</span> 1rem<span class="token punctuation">;</span>\n  <span class="token property">line-height</span><span class="token punctuation">:</span> 1.5rem<span class="token punctuation">;</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>\n  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n  <span class="token property">margin-right</span><span class="token punctuation">:</span> 0.5rem<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.spotify__album-cover </span><span class="token punctuation">{</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> 5rem<span class="token punctuation">;</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> 4.875rem<span class="token punctuation">;</span>\n  <span class="token property">margin-right</span><span class="token punctuation">:</span> 1rem<span class="token punctuation">;</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> #000000<span class="token punctuation">;</span>\n  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre></div>`,
}
